@page "/admin/dashboard"
@attribute [Authorize(AuthenticationSchemes = "AdminAuth")]
@rendermode InteractiveServer
@using Botwatch.Data
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.EntityFrameworkCore
@using System.Text.Json
@inject BotContext Db
@inject NavigationManager Nav
@inject IHttpContextAccessor HttpContextAccessor
@using Microsoft.AspNetCore.Authorization
@using System.Security.Claims;
@using Microsoft.AspNetCore.Authentication;
@using Microsoft.AspNetCore.Authentication.Cookies;


<h3>Admin Dashboard</h3>
@if (!string.IsNullOrEmpty(Username))
{
    <p>Welcome, @Username!</p>
}
<button class="btn btn-danger" @onclick="Logout">Logout</button>

@code {
    private string Username;

    [CascadingParameter] private Task<AuthenticationState> AuthenticationStateTask { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateTask;
        var user = authState.User;

        if (user.Identity?.IsAuthenticated ?? false)
        {
            Username = user.Identity.Name;
        }
        else
        {
            Nav.NavigateTo("/admin", forceLoad: true);
        }
    }

    private async Task Logout()
    {
        await HttpContextAccessor.HttpContext.SignOutAsync("AdminAuth");
        Nav.NavigateTo("/admin", forceLoad: true);
    }
}

